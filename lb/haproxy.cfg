global
  maxconn 5000
  log /dev/log local0
  log localhost local1 notice
  user haproxy
  group haproxy
  daemon

defaults
  log global
  mode http
  option httplog
  option dontlognull
  retries 3
  timeout connect 5000
  timeout client 50000
  timeout server 50000

frontend streaming-cluster
  bind *:80
  # certificat ssl généré à la construction de l'image
  bind *:443 ssl crt /etc/ssl/private/streaming-cluster.pem
  use_backend broadcast1 if { hdr(host) -i broadcast1.streaming-cluster.test }
  use_backend broadcast2 if { hdr(host) -i broadcast2.streaming-cluster.test }
  use_backend broadcast3 if { hdr(host) -i broadcast3.streaming-cluster.test }
  use_backend broadcast4 if { hdr(host) -i broadcast4.streaming-cluster.test }
  default_backend web_servers

backend broadcast1
  server broadcast1 broadcast1:80
backend broadcast2
  server broadcast2 broadcast2:80
backend broadcast3
  server broadcast3 broadcast3:80
backend broadcast4
  server broadcast4 broadcast4:80

backend web_servers
  # page de stats
  stats enable
  stats auth admin:admin
  stats uri /haproxy?stats
  # répartition par tourniquet
  balance roundrobin
  # on set au client un cookie pour qu'il revienne sur le même backend
  cookie SERVERUSED insert indirect nocache
  # Enable HTTP protocol to check on the servers health
  option httpchk HEAD /
  # Enable insertion of the X-Forwarded-For header to requests sent to servers
  option forwardfor
  # Enable HTTP connection closing on the server side
  option http-server-close
  default-server check maxconn 20
  # lister les nodes nginx de diff ici
  server broadcast1 broadcast1:80 cookie broadcast1
  server broadcast2 broadcast2:80 cookie broadcast2
  server broadcast3 broadcast3:80 cookie broadcast3
  server broadcast4 broadcast4:80 cookie broadcast4
